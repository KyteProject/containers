---
name: Release

on:
  pull_request:
    branches: ["main"]
    paths: ["apps/**"]
  push:
    branches: ["main"]
    paths: ["apps/**"]
  workflow_dispatch:
    inputs:
      app:
        type: string
        description: The name of the app to build
        required: true
      release:
        type: boolean
        description: Whether to release the app
        required: false
        default: false

jobs:
  changed:
    name: Get Changed Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.apps.outputs.apps }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - if: ${{ github.event_name != 'workflow_dispatch' }}
        name: Get Changed Directories
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        id: changed-dirs
        with:
          dir_names: true
          dir_names_max_depth: "1"
          path: apps

      - name: Extract Metadata
        id: apps
        working-directory: apps
        run: |
          if [[ "${{ github.event_name }}" != "workflow_dispatch" ]]; then
            apps="${{ steps.changed-dirs.outputs.all_changed_and_modified_files }}"
          else
            apps="${{ inputs.app }}"
          fi
          apps=$(printf "%s/metadata.yaml\n" ${apps})
          apps=$(yq eval-all --indent=0 --output-format=json "[.]" ${apps})
          echo "apps=${apps}" >> $GITHUB_OUTPUT

  build:
    needs: changed
    name: Build ${{ matrix.app.name }}
    uses: ./.github/workflows/image-build-action.yaml
    permissions:
      contents: read
      id-token: write
      packages: write
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changed.outputs.apps) }}
      fail-fast: false
    with:
      app: ${{ matrix.app.name }}
      version: ${{ matrix.app.version }}
      test: ${{ matrix.app.test }}
      release: ${{ github.event_name == 'workflow_dispatch' && inputs.release || github.event_name == 'push' }}

  status:
    if: ${{ always() }}
    needs: build
    name: Build Success
    runs-on: ubuntu-latest
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
